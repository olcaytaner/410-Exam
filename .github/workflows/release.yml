name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  update-version:
    name: Update pom.xml Version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.extract_version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up Java 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 8
          cache: 'maven'

      - name: Extract version from tag
        id: extract_version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update pom.xml version
        run: |
          VERSION=${{ steps.extract_version.outputs.version }}
          mvn versions:set -DnewVersion=${VERSION} -DgenerateBackupPoms=false

      - name: Commit pom.xml version update
        run: |
          VERSION=${{ steps.extract_version.outputs.version }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pom.xml
          git diff --staged --quiet || git commit -m "Update version to ${VERSION}"
          git push origin main

  build-jar:
    name: Build Universal JAR
    runs-on: ubuntu-latest
    needs: update-version

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up Java 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 8
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar-file
          path: target/CS410-Exam-*.jar
          retention-days: 1

  verify-jar:
    name: Verify JAR on Java ${{ matrix.java }}
    runs-on: ubuntu-latest
    needs: build-jar

    strategy:
      fail-fast: true  # Stop release if any version fails
      matrix:
        java: [8, 11, 17, 21, 24, 25]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: jar-file
          path: downloaded-jar

      - name: Extract JAR to target directory
        run: |
          mkdir -p target/classes
          unzip -o downloaded-jar/CS410-Exam-*.jar -d target/classes

      - name: Print Java info
        run: |
          java -version
          echo "JAVA_HOME=$JAVA_HOME"

      - name: Run GraphViz tests
        run: mvn test -Dtest=GraphvizEngineTest

  create-release:
    name: Create GitHub Release
    needs: [update-version, verify-jar]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: jar-file
          path: release-jar

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ needs.update-version.outputs.version }}
          body: |
            ## CS410-Exam Release ${{ needs.update-version.outputs.version }}

            ### Download
            **CS410-Exam-${{ needs.update-version.outputs.version }}.jar** - Compatible with Java 8+

            ### Changes
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          files: |
            release-jar/CS410-Exam-*.jar
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  commit-jar-to-repo:
    name: Commit JAR to Repository
    needs: [update-version, create-release]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: jar-file
          path: downloaded-jar

      - name: Commit JAR to repository
        run: |
          VERSION=${{ needs.update-version.outputs.version }}

          # Remove old JAR files from repo root
          git rm -f CS410-Exam-*.jar || true

          # Find the JAR file in the downloaded artifact
          JAR_FILE=$(find downloaded-jar -name "CS410-Exam-*.jar" -type f)

          if [ -z "$JAR_FILE" ]; then
            echo "Error: Could not find JAR file"
            echo "Contents of downloaded-jar:"
            find downloaded-jar -type f
            exit 1
          fi

          # Move the JAR to repo root
          mv "$JAR_FILE" "CS410-Exam-${VERSION}.jar"

          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Add and commit the JAR
          git add "CS410-Exam-${VERSION}.jar"

          # Only commit if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "Release: Add CS410-Exam-${VERSION}.jar (Java 8+)"
            git push origin main
          fi
